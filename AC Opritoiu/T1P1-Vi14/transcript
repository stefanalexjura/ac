project open {D:/Facultate UPT/AC Opritoiu/T1P1-Vi14/test}
# Loading project test
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:40:49 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:40:49 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:40:50 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         x	000000000000000000
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	         0	000000000000000000
#   16	000	00	00001	 5		          25	         0	000000000000000000
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	         0	000000000000000001
#   48	000	00	00001	10		           0	         0	000000000000000001
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         x	000000000000000000
#  102	001	00	00001	10		           0	         0	000000000000000001
#  104	000	00	00001	10		           0	         0	000000000000000001
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        40	000000000000000000
#  116	000	00	00001	 5		          25	        40	000000000000000000
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         0	000000000000000001
#  156	000	00	00001	 1		           0	         0	000000000000000001
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         x	000000000000000000
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	         0	000000000000000000
#  216	000	00	00001	 5		          25	         0	000000000000000000
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	         0	000000000000000001
#  248	000	00	00001	10		           0	         0	000000000000000001
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  49 /  60
# Nota: 2. 4
# End time: 12:40:54 on Nov 06,2023, Elapsed time: 0:00:04
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:41:40 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:41:40 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:41:40 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         x	000000000000000000
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         x	000000000000000000
#  102	001	00	00001	10		           0	         0	000000000000000001
#  104	000	00	00001	10		           0	         0	000000000000000001
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         0	000000000000000001
#  156	000	00	00001	 1		           0	         0	000000000000000001
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         x	000000000000000000
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  50 /  60
# Nota: 2. 8
# End time: 12:41:42 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:42:02 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:42:02 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:42:02 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         x	000000000000000000
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        50	000000000000000000
#   16	000	00	00001	 5		          25	        50	000000000000000000
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         x	000000000000000000
#  102	001	00	00001	10		           0	         0	000000000000000001
#  104	000	00	00001	10		           0	         0	000000000000000001
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        50	000000000000000000
#  116	000	00	00001	 5		          25	        50	000000000000000000
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         0	000000000000000001
#  156	000	00	00001	 1		           0	         0	000000000000000001
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         x	000000000000000000
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        50	000000000000000000
#  216	000	00	00001	 5		          25	        50	000000000000000000
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  47 /  60
# Nota: 1.95
# End time: 12:42:04 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:42:36 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:42:36 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:42:36 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        50	000000000000000000
#   16	000	00	00001	 5		          25	        50	000000000000000000
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	         0	000000000000000001
#  104	000	00	00001	10		           0	         0	000000000000000001
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        50	000000000000000000
#  116	000	00	00001	 5		          25	        50	000000000000000000
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         0	000000000000000001
#  156	000	00	00001	 1		           0	         0	000000000000000001
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        50	000000000000000000
#  216	000	00	00001	 5		          25	        50	000000000000000000
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  50 /  60
# Nota: 2. 8
# End time: 12:42:39 on Nov 06,2023, Elapsed time: 0:00:03
# Errors: 0, Warnings: 0

do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:43:48 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:43:48 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:43:48 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         x	000000000000000000
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	         0	000000000000000000
#    8	000	00	00001	 5		          50	         0	000000000000000000
#   10	001	00	00001	 0		          50	         0	000000000000000000
#   12	000	00	00001	 0		          50	         0	000000000000000000
#   14	001	00	00001	 5		          25	        50	000000000000000000
#   16	000	00	00001	 5		          25	        50	000000000000000000
#   18	001	00	00001	 2		          10	        25	000000000000000000
#   20	000	00	00001	 2		          10	        25	000000000000000000
#   21	000	01	00001	10		          10	        25	000000000000000000
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        10	000000000000000000
#   28	000	00	00001	13		          65	        10	000000000000000000
#   30	001	00	00001	13		         169	        65	000000000000000000
#   32	000	00	00001	13		         169	        65	000000000000000000
#   34	001	00	00001	15		         195	       169	000000000000000000
#   36	000	00	00001	15		         195	       169	000000000000000000
#   38	001	00	00001	15		         225	       195	000000000000000000
#   40	000	00	00001	15		         225	       195	000000000000000000
#   42	001	00	00001	 0		           0	       195	000000000000000000
#   44	000	00	00001	 0		           0	       195	000000000000000000
#   46	001	00	00001	10		           0	       225	000000000000000000
#   48	000	00	00001	10		           0	       225	000000000000000000
#   50	001	00	00001	 3		           0	       150	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	         0	000000000000000000
#   60	000	00	00001	10		          10	         0	000000000000000000
#   62	001	00	00001	 0		          10	         0	000000000000000000
#   64	000	00	00001	 0		          10	         0	000000000000000000
#   66	001	00	00001	 0		          10	         0	000000000000000000
#   68	000	00	00001	 0		          10	         0	000000000000000000
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         x	000000000000000000
#  102	001	00	00001	10		           0	         0	000000000000000001
#  104	000	00	00001	10		           0	         0	000000000000000001
#  106	001	00	00001	 5		          50	         0	000000000000000000
#  108	000	00	00001	 5		          50	         0	000000000000000000
#  110	001	00	00001	 8		          50	         0	000000000000000000
#  112	000	00	00001	 8		          50	         0	000000000000000000
#  114	001	00	00001	 5		          25	        50	000000000000000000
#  116	000	00	00001	 5		          25	        50	000000000000000000
#  118	001	00	00001	 2		          10	        25	000000000000000000
#  120	000	00	00001	 2		          10	        25	000000000000000000
#  121	000	01	00001	10		          10	        25	000000000000000000
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        10	000000000000000000
#  128	000	00	00001	13		          65	        10	000000000000000000
#  130	001	00	00001	13		         169	        65	000000000000000000
#  132	000	00	00001	13		         169	        65	000000000000000000
#  134	001	00	00001	15		         195	       169	000000000000000000
#  136	000	00	00001	15		         195	       169	000000000000000000
#  138	001	00	00001	15		         225	       195	000000000000000000
#  140	000	00	00001	15		         225	       195	000000000000000000
#  142	001	00	00001	 0		           0	       225	000000000000000000
#  144	000	00	00001	 0		           0	       225	000000000000000000
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	         0	000000000000000001
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         0	000000000000000001
#  156	000	00	00001	 1		           0	         0	000000000000000001
#  158	001	00	00001	10		          10	         0	000000000000000000
#  160	000	00	00001	10		          10	         0	000000000000000000
#  162	001	00	00001	 8		          10	         0	000000000000000000
#  164	000	00	00001	 8		          10	         0	000000000000000000
#  166	001	00	00001	 8		          10	         0	000000000000000000
#  168	000	00	00001	 8		          10	         0	000000000000000000
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         x	000000000000000000
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	         0	000000000000000000
#  208	000	00	00001	 5		          50	         0	000000000000000000
#  210	001	00	00001	 0		          50	         0	000000000000000000
#  212	000	00	00001	 0		          50	         0	000000000000000000
#  214	001	00	00001	 5		          25	        50	000000000000000000
#  216	000	00	00001	 5		          25	        50	000000000000000000
#  218	001	00	00001	 2		          10	        25	000000000000000000
#  220	000	00	00001	 2		          10	        25	000000000000000000
#  221	000	01	00001	10		          10	        25	000000000000000000
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        10	000000000000000000
#  228	000	00	00001	13		          65	        10	000000000000000000
#  230	001	00	00001	13		         169	        65	000000000000000000
#  232	000	00	00001	13		         169	        65	000000000000000000
#  234	001	00	00001	63		         819	       169	000000000000000000
#  236	000	00	00001	63		         819	       169	000000000000000000
#  238	001	00	00001	63		        3969	       819	000000000000000000
#  240	000	00	00001	63		        3969	       819	000000000000000000
#  242	001	00	00001	 0		           0	       819	000000000000000000
#  244	000	00	00001	 0		           0	       819	000000000000000000
#  246	001	00	00001	10		           0	      3969	000000000000000000
#  248	000	00	00001	10		           0	      3969	000000000000000000
#  250	001	00	00001	 3		           0	       630	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	         0	000000000000000000
#  260	000	00	00001	10		          10	         0	000000000000000000
#  262	001	00	00001	 0		          10	         0	000000000000000000
#  264	000	00	00001	 0		          10	         0	000000000000000000
#  266	001	00	00001	 0		          10	         0	000000000000000000
#  268	000	00	00001	 0		          10	         0	000000000000000000
# All Passed / All Total:  17 /  60
# Nota: 0.70
# End time: 12:43:50 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:44:37 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:44:37 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:44:37 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         x	000000000000000000
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        50	000000000000000000
#   16	000	00	00001	 5		          25	        50	000000000000000000
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         x	000000000000000000
#  102	001	00	00001	10		           0	         0	000000000000000001
#  104	000	00	00001	10		           0	         0	000000000000000001
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        50	000000000000000000
#  116	000	00	00001	 5		          25	        50	000000000000000000
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         0	000000000000000001
#  156	000	00	00001	 1		           0	         0	000000000000000001
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         x	000000000000000000
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        50	000000000000000000
#  216	000	00	00001	 5		          25	        50	000000000000000000
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  47 /  60
# Nota: 1.95
# End time: 12:44:39 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:45:02 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:45:02 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:45:02 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        50	000000000000000000
#   16	000	00	00001	 5		          25	        50	000000000000000000
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	         0	000000000000000001
#  104	000	00	00001	10		           0	         0	000000000000000001
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        50	000000000000000000
#  116	000	00	00001	 5		          25	        50	000000000000000000
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         0	000000000000000001
#  156	000	00	00001	 1		           0	         0	000000000000000001
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        50	000000000000000000
#  216	000	00	00001	 5		          25	        50	000000000000000000
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  50 /  60
# Nota: 2. 8
# End time: 12:45:04 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:46:39 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:46:39 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:46:39 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         x	000000000000000000
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         x	000000000000000000
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         x	000000000000000000
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  48 /  60
# Nota: 2. 0
# End time: 12:46:41 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:46:58 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:46:59 on Nov 06,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:46:59 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  51 /  60
# Nota: 2.12
# End time: 12:47:01 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:47:37 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:47:38 on Nov 06,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:47:38 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  51 /  60
# Nota: 2.12

# End time: 12:47:40 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:47:48 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:47:48 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:47:48 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  51 /  60
# Nota: 2.12
# End time: 12:47:51 on Nov 06,2023, Elapsed time: 0:00:03
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:49:00 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:49:00 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:49:00 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	         0	000000000000000000
#   16	000	00	00001	 5		          25	         0	000000000000000000
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	         0	000000000000000001
#   48	000	00	00001	10		           0	         0	000000000000000001
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        40	000000000000000000
#  116	000	00	00001	 5		          25	        40	000000000000000000
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	         0	000000000000000000
#  216	000	00	00001	 5		          25	         0	000000000000000000
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	         0	000000000000000001
#  248	000	00	00001	10		           0	         0	000000000000000001
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  50 /  60
# Nota: 2. 8
# End time: 12:49:02 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:49:22 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:49:22 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:49:22 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	         0	000000000000000000
#   16	000	00	00001	 5		          25	         0	000000000000000000
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	         0	000000000000000001
#   48	000	00	00001	10		           0	         0	000000000000000001
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        40	000000000000000000
#  116	000	00	00001	 5		          25	        40	000000000000000000
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	         0	000000000000000000
#  216	000	00	00001	 5		          25	         0	000000000000000000
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	         0	000000000000000001
#  248	000	00	00001	10		           0	         0	000000000000000001
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  50 /  60
# Nota: 2. 8
# End time: 12:49:25 on Nov 06,2023, Elapsed time: 0:00:03
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:49:42 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:49:42 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:49:42 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  51 /  60
# Nota: 2.12
# End time: 12:49:44 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:50:03 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:50:03 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:50:03 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	        50	000000000000000000
#    4	000	00	00001	10		           0	        50	000000000000000000
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	        30	000000000000000000
#   54	001	00	00001	 1		           0	         3	000000000000000000
#   56	000	00	00001	 1		           0	         3	000000000000000000
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	        40	000000000000000000
#  102	001	00	00001	10		           0	        50	000000000000000000
#  104	000	00	00001	10		           0	        50	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	        30	000000000000000000
#  154	001	00	00001	 1		           0	         3	000000000000000000
#  156	000	00	00001	 1		           0	         3	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	        50	000000000000000000
#  204	000	00	00001	10		           0	        50	000000000000000000
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	        30	000000000000000000
#  254	001	00	00001	 1		           0	         3	000000000000000000
#  256	000	00	00001	 1		           0	         3	000000000000000000
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  43 /  60
# Nota: 1.79
# End time: 12:50:05 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:50:14 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:50:14 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:50:14 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  51 /  60
# Nota: 2.12
# End time: 12:50:16 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:50:22 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:50:22 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:50:22 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	        30	000000000000000000
#   54	001	00	00001	 1		           0	         3	000000000000000000
#   56	000	00	00001	 1		           0	         3	000000000000000000
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	        30	000000000000000000
#  154	001	00	00001	 1		           0	         3	000000000000000000
#  156	000	00	00001	 1		           0	         3	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	        30	000000000000000000
#  254	001	00	00001	 1		           0	         3	000000000000000000
#  256	000	00	00001	 1		           0	         3	000000000000000000
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  46 /  60
# Nota: 1.91
# End time: 12:50:24 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:50:33 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:50:33 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:50:33 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  51 /  60
# Nota: 2.12
# End time: 12:50:35 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:50:55 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:50:56 on Nov 06,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:50:56 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  51 /  60
# Nota: 2.12
# End time: 12:50:58 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:51:05 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:51:05 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:51:05 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  51 /  60
# Nota: 2.12
# End time: 12:51:08 on Nov 06,2023, Elapsed time: 0:00:03
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:51:25 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:51:25 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:51:25 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         1	000000000000000000
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         1	000000000000000000
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         1	000000000000000000
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  48 /  60
# Nota: 2. 0
# End time: 12:51:27 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:51:33 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:51:33 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:51:33 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  51 /  60
# Nota: 2.12
# End time: 12:51:35 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:51:59 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:51:59 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:51:59 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         3	000000000000000000
#   56	000	00	00001	 1		           0	         3	000000000000000000
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         3	000000000000000000
#  156	000	00	00001	 1		           0	         3	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         3	000000000000000000
#  256	000	00	00001	 1		           0	         3	000000000000000000
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  49 /  60
# Nota: 2. 4
# End time: 12:52:02 on Nov 06,2023, Elapsed time: 0:00:03
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:52:35 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:52:36 on Nov 06,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:52:36 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  51 /  60
# Nota: 2.12
# End time: 12:52:38 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:53:42 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:53:42 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:53:42 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         x	000000000000000000
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        50	000000000000000000
#   16	000	00	00001	 5		          25	        50	000000000000000000
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         x	000000000000000000
#  102	001	00	00001	10		           0	         0	000000000000000001
#  104	000	00	00001	10		           0	         0	000000000000000001
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        50	000000000000000000
#  116	000	00	00001	 5		          25	        50	000000000000000000
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         0	000000000000000001
#  156	000	00	00001	 1		           0	         0	000000000000000001
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         x	000000000000000000
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        50	000000000000000000
#  216	000	00	00001	 5		          25	        50	000000000000000000
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  47 /  60
# Nota: 1.95
# End time: 12:53:44 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:54:07 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:54:07 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:54:07 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        50	000000000000000000
#   16	000	00	00001	 5		          25	        50	000000000000000000
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	         0	000000000000000001
#  104	000	00	00001	10		           0	         0	000000000000000001
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        50	000000000000000000
#  116	000	00	00001	 5		          25	        50	000000000000000000
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         0	000000000000000001
#  156	000	00	00001	 1		           0	         0	000000000000000001
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        50	000000000000000000
#  216	000	00	00001	 5		          25	        50	000000000000000000
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  50 /  60
# Nota: 2. 8
# End time: 12:54:09 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:54:59 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# ** Error: ex3.v(66): (vlog-2110) Illegal reference to net "mult_result".
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# End time: 12:55:00 on Nov 06,2023, Elapsed time: 0:00:01
# Errors: 1, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:55:14 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:55:14 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:55:14 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         x	000000000000000000
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	         0	000000000000000000
#    8	000	00	00001	 5		          50	         0	000000000000000000
#   10	001	00	00001	 0		          50	         0	000000000000000000
#   12	000	00	00001	 0		          50	         0	000000000000000000
#   14	001	00	00001	 5		          25	         0	000000000000000000
#   16	000	00	00001	 5		          25	         0	000000000000000000
#   18	001	00	00001	 2		          10	         0	000000000000000000
#   20	000	00	00001	 2		          10	         0	000000000000000000
#   21	000	01	00001	10		          10	         0	000000000000000000
#   22	001	00	00001	 5		          10	         0	000000000000000000
#   24	000	00	00001	10		          10	         0	000000000000000000
#   26	001	00	00001	13		          65	         0	000000000000000000
#   28	000	00	00001	13		          65	         0	000000000000000000
#   30	001	00	00001	13		         169	         0	000000000000000000
#   32	000	00	00001	13		         169	         0	000000000000000000
#   34	001	00	00001	15		         195	         0	000000000000000000
#   36	000	00	00001	15		         195	         0	000000000000000000
#   38	001	00	00001	15		         225	         0	000000000000000000
#   40	000	00	00001	15		         225	         0	000000000000000000
#   42	001	00	00001	 0		           0	         0	000000000000000001
#   44	000	00	00001	 0		           0	         0	000000000000000001
#   46	001	00	00001	10		           0	         0	000000000000000001
#   48	000	00	00001	10		           0	         0	000000000000000001
#   50	001	00	00001	 3		           0	         0	000000000000000001
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	         0	000000000000000000
#   60	000	00	00001	10		          10	         0	000000000000000000
#   62	001	00	00001	 0		          10	         0	000000000000000000
#   64	000	00	00001	 0		          10	         0	000000000000000000
#   66	001	00	00001	 0		          10	         0	000000000000000000
#   68	000	00	00001	 0		          10	         0	000000000000000000
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         x	000000000000000000
#  102	001	00	00001	10		           0	       136	000000000000000000
#  104	000	00	00001	10		           0	       136	000000000000000000
#  106	001	00	00001	 5		          50	       136	000000000000000000
#  108	000	00	00001	 5		          50	       136	000000000000000000
#  110	001	00	00001	 8		          50	       136	000000000000000000
#  112	000	00	00001	 8		          50	       136	000000000000000000
#  114	001	00	00001	 5		          25	       136	000000000000000000
#  116	000	00	00001	 5		          25	       136	000000000000000000
#  118	001	00	00001	 2		          10	       136	000000000000000000
#  120	000	00	00001	 2		          10	       136	000000000000000000
#  121	000	01	00001	10		          10	       136	000000000000000000
#  122	001	00	00001	 5		          10	       136	000000000000000000
#  124	000	00	00001	10		          10	       136	000000000000000000
#  126	001	00	00001	13		          65	       136	000000000000000000
#  128	000	00	00001	13		          65	       136	000000000000000000
#  130	001	00	00001	13		         169	       136	000000000000000000
#  132	000	00	00001	13		         169	       136	000000000000000000
#  134	001	00	00001	15		         195	       136	000000000000000000
#  136	000	00	00001	15		         195	       136	000000000000000000
#  138	001	00	00001	15		         225	       136	000000000000000000
#  140	000	00	00001	15		         225	       136	000000000000000000
#  142	001	00	00001	 0		           0	       136	000000000000000000
#  144	000	00	00001	 0		           0	       136	000000000000000000
#  146	001	00	00001	10		           0	       136	000000000000000000
#  148	000	00	00001	10		           0	       136	000000000000000000
#  150	001	00	00001	 3		           0	       136	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	       136	000000000000000000
#  156	000	00	00001	 1		           0	       136	000000000000000000
#  158	001	00	00001	10		          10	       136	000000000000000000
#  160	000	00	00001	10		          10	       136	000000000000000000
#  162	001	00	00001	 8		          10	       136	000000000000000000
#  164	000	00	00001	 8		          10	       136	000000000000000000
#  166	001	00	00001	 8		          10	       136	000000000000000000
#  168	000	00	00001	 8		          10	       136	000000000000000000
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         x	000000000000000000
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	         0	000000000000000000
#  208	000	00	00001	 5		          50	         0	000000000000000000
#  210	001	00	00001	 0		          50	         0	000000000000000000
#  212	000	00	00001	 0		          50	         0	000000000000000000
#  214	001	00	00001	 5		          25	         0	000000000000000000
#  216	000	00	00001	 5		          25	         0	000000000000000000
#  218	001	00	00001	 2		          10	         0	000000000000000000
#  220	000	00	00001	 2		          10	         0	000000000000000000
#  221	000	01	00001	10		          10	         0	000000000000000000
#  222	001	00	00001	 5		          10	         0	000000000000000000
#  224	000	00	00001	10		          10	         0	000000000000000000
#  226	001	00	00001	13		          65	         0	000000000000000000
#  228	000	00	00001	13		          65	         0	000000000000000000
#  230	001	00	00001	13		         169	         0	000000000000000000
#  232	000	00	00001	13		         169	         0	000000000000000000
#  234	001	00	00001	63		         819	         0	000000000000000000
#  236	000	00	00001	63		         819	         0	000000000000000000
#  238	001	00	00001	63		        3969	         0	000000000000000000
#  240	000	00	00001	63		        3969	         0	000000000000000000
#  242	001	00	00001	 0		           0	         0	000000000000000001
#  244	000	00	00001	 0		           0	         0	000000000000000001
#  246	001	00	00001	10		           0	         0	000000000000000001
#  248	000	00	00001	10		           0	         0	000000000000000001
#  250	001	00	00001	 3		           0	         0	000000000000000001
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	         0	000000000000000000
#  260	000	00	00001	10		          10	         0	000000000000000000
#  262	001	00	00001	 0		          10	         0	000000000000000000
#  264	000	00	00001	 0		          10	         0	000000000000000000
#  266	001	00	00001	 0		          10	         0	000000000000000000
#  268	000	00	00001	 0		          10	         0	000000000000000000
# All Passed / All Total:  13 /  60
# Nota: 0.54
# End time: 12:55:16 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:55:26 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# ** Error: ex3.v(66): (vlog-2110) Illegal reference to net "mult_result".
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# End time: 12:55:26 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 1, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:55:58 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# ** Error: ex3.v(73): Declarations not allowed in unnamed block.
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# End time: 12:55:58 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 1, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:56:37 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# ** Error: ex3.v(73): Declarations not allowed in unnamed block.
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# End time: 12:56:37 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 1, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:57:41 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:57:41 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:57:41 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	         0	000000000000000000
#    8	000	00	00001	 5		          50	         0	000000000000000000
#   10	001	00	00001	 0		          50	         0	000000000000000000
#   12	000	00	00001	 0		          50	         0	000000000000000000
#   14	001	00	00001	 5		          25	         0	000000000000000000
#   16	000	00	00001	 5		          25	         0	000000000000000000
#   18	001	00	00001	 2		          10	         0	000000000000000000
#   20	000	00	00001	 2		          10	         0	000000000000000000
#   21	000	01	00001	10		          10	         0	000000000000000000
#   22	001	00	00001	 5		          10	         0	000000000000000000
#   24	000	00	00001	10		          10	         0	000000000000000000
#   26	001	00	00001	13		          65	         0	000000000000000000
#   28	000	00	00001	13		          65	         0	000000000000000000
#   30	001	00	00001	13		         169	         0	000000000000000000
#   32	000	00	00001	13		         169	         0	000000000000000000
#   34	001	00	00001	15		         195	         0	000000000000000000
#   36	000	00	00001	15		         195	         0	000000000000000000
#   38	001	00	00001	15		         225	         0	000000000000000000
#   40	000	00	00001	15		         225	         0	000000000000000000
#   42	001	00	00001	 0		           0	         0	000000000000000001
#   44	000	00	00001	 0		           0	         0	000000000000000001
#   46	001	00	00001	10		           0	         0	000000000000000001
#   48	000	00	00001	10		           0	         0	000000000000000001
#   50	001	00	00001	 3		           0	         0	000000000000000001
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	         0	000000000000000000
#   60	000	00	00001	10		          10	         0	000000000000000000
#   62	001	00	00001	 0		          10	         0	000000000000000000
#   64	000	00	00001	 0		          10	         0	000000000000000000
#   66	001	00	00001	 0		          10	         0	000000000000000000
#   68	000	00	00001	 0		          10	         0	000000000000000000
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	       136	000000000000000000
#  102	001	00	00001	10		           0	       136	000000000000000000
#  104	000	00	00001	10		           0	       136	000000000000000000
#  106	001	00	00001	 5		          50	       136	000000000000000000
#  108	000	00	00001	 5		          50	       136	000000000000000000
#  110	001	00	00001	 8		          50	       136	000000000000000000
#  112	000	00	00001	 8		          50	       136	000000000000000000
#  114	001	00	00001	 5		          25	       136	000000000000000000
#  116	000	00	00001	 5		          25	       136	000000000000000000
#  118	001	00	00001	 2		          10	       136	000000000000000000
#  120	000	00	00001	 2		          10	       136	000000000000000000
#  121	000	01	00001	10		          10	       136	000000000000000000
#  122	001	00	00001	 5		          10	       136	000000000000000000
#  124	000	00	00001	10		          10	       136	000000000000000000
#  126	001	00	00001	13		          65	       136	000000000000000000
#  128	000	00	00001	13		          65	       136	000000000000000000
#  130	001	00	00001	13		         169	       136	000000000000000000
#  132	000	00	00001	13		         169	       136	000000000000000000
#  134	001	00	00001	15		         195	       136	000000000000000000
#  136	000	00	00001	15		         195	       136	000000000000000000
#  138	001	00	00001	15		         225	       136	000000000000000000
#  140	000	00	00001	15		         225	       136	000000000000000000
#  142	001	00	00001	 0		           0	       136	000000000000000000
#  144	000	00	00001	 0		           0	       136	000000000000000000
#  146	001	00	00001	10		           0	       136	000000000000000000
#  148	000	00	00001	10		           0	       136	000000000000000000
#  150	001	00	00001	 3		           0	       136	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	       136	000000000000000000
#  156	000	00	00001	 1		           0	       136	000000000000000000
#  158	001	00	00001	10		          10	       136	000000000000000000
#  160	000	00	00001	10		          10	       136	000000000000000000
#  162	001	00	00001	 8		          10	       136	000000000000000000
#  164	000	00	00001	 8		          10	       136	000000000000000000
#  166	001	00	00001	 8		          10	       136	000000000000000000
#  168	000	00	00001	 8		          10	       136	000000000000000000
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	         0	000000000000000000
#  208	000	00	00001	 5		          50	         0	000000000000000000
#  210	001	00	00001	 0		          50	         0	000000000000000000
#  212	000	00	00001	 0		          50	         0	000000000000000000
#  214	001	00	00001	 5		          25	         0	000000000000000000
#  216	000	00	00001	 5		          25	         0	000000000000000000
#  218	001	00	00001	 2		          10	         0	000000000000000000
#  220	000	00	00001	 2		          10	         0	000000000000000000
#  221	000	01	00001	10		          10	         0	000000000000000000
#  222	001	00	00001	 5		          10	         0	000000000000000000
#  224	000	00	00001	10		          10	         0	000000000000000000
#  226	001	00	00001	13		          65	         0	000000000000000000
#  228	000	00	00001	13		          65	         0	000000000000000000
#  230	001	00	00001	13		         169	         0	000000000000000000
#  232	000	00	00001	13		         169	         0	000000000000000000
#  234	001	00	00001	63		         819	         0	000000000000000000
#  236	000	00	00001	63		         819	         0	000000000000000000
#  238	001	00	00001	63		        3969	         0	000000000000000000
#  240	000	00	00001	63		        3969	         0	000000000000000000
#  242	001	00	00001	 0		           0	         0	000000000000000001
#  244	000	00	00001	 0		           0	         0	000000000000000001
#  246	001	00	00001	10		           0	         0	000000000000000001
#  248	000	00	00001	10		           0	         0	000000000000000001
#  250	001	00	00001	 3		           0	         0	000000000000000001
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	         0	000000000000000000
#  260	000	00	00001	10		          10	         0	000000000000000000
#  262	001	00	00001	 0		          10	         0	000000000000000000
#  264	000	00	00001	 0		          10	         0	000000000000000000
#  266	001	00	00001	 0		          10	         0	000000000000000000
#  268	000	00	00001	 0		          10	         0	000000000000000000
# All Passed / All Total:  15 /  60
# Nota: 0.62
# End time: 12:57:43 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:59:26 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:59:26 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:59:26 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         x	000000000000000000
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         x	000000000000000000
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         x	000000000000000000
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  48 /  60
# Nota: 2. 0
# End time: 12:59:29 on Nov 06,2023, Elapsed time: 0:00:03
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 12:59:42 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 12:59:42 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 12:59:42 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  51 /  60
# Nota: 2.12
# End time: 12:59:44 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
do run_ex3.txt
# ex3.v
# mult_last_2_tb
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 13:00:05 on Nov 06,2023
# vlog -reportprogress 300 ex3.v 
# -- Compiling module mult_last2
# -- Compiling module mult_last2_tb0
# -- Compiling module mult_last2_tb1
# -- Compiling module mult_last2_tb2
# -- Compiling module mult_last_2_tb
# 
# Top level modules:
# 	mult_last_2_tb
# End time: 13:00:05 on Nov 06,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" mult_last_2_tb 
# Start time: 13:00:05 on Nov 06,2023
# Loading work.mult_last_2_tb
# Loading work.mult_last2_tb0
# Loading work.mult_last2
# Loading work.mult_last2_tb1
# Loading work.mult_last2_tb2
# TESTBENCH 0: Valori implicite ale parametrilor
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#    0	000	00	00001	 5		           0	         0	000000000000000001
#    2	001	00	00001	10		           0	         0	000000000000000001
#    4	000	00	00001	10		           0	         0	000000000000000001
#    6	001	00	00001	 5		          50	        50	000000000000000001
#    8	000	00	00001	 5		          50	        50	000000000000000001
#   10	001	00	00001	 0		          50	        50	000000000000000001
#   12	000	00	00001	 0		          50	        50	000000000000000001
#   14	001	00	00001	 5		          25	        25	000000000000000001
#   16	000	00	00001	 5		          25	        25	000000000000000001
#   18	001	00	00001	 2		          10	        10	000000000000000001
#   20	000	00	00001	 2		          10	        10	000000000000000001
#   21	000	01	00001	10		          10	        10	000000000000000001
#   22	001	00	00001	 5		          10	        10	000000000000000001
#   24	000	00	00001	10		          10	        10	000000000000000001
#   26	001	00	00001	13		          65	        65	000000000000000001
#   28	000	00	00001	13		          65	        65	000000000000000001
#   30	001	00	00001	13		         169	       169	000000000000000001
#   32	000	00	00001	13		         169	       169	000000000000000001
#   34	001	00	00001	15		         195	       195	000000000000000001
#   36	000	00	00001	15		         195	       195	000000000000000001
#   38	001	00	00001	15		         225	       225	000000000000000001
#   40	000	00	00001	15		         225	       225	000000000000000001
#   42	001	00	00001	 0		           0	       225	000000000000000000
#   44	000	00	00001	 0		           0	       225	000000000000000000
#   46	001	00	00001	10		           0	       150	000000000000000000
#   48	000	00	00001	10		           0	       150	000000000000000000
#   50	001	00	00001	 3		           0	        30	000000000000000000
#   52	000	00	00000	10		           0	         0	000000000000000001
#   54	001	00	00001	 1		           0	         0	000000000000000001
#   56	000	00	00001	 1		           0	         0	000000000000000001
#   58	001	00	00001	10		          10	        10	000000000000000001
#   60	000	00	00001	10		          10	        10	000000000000000001
#   62	001	00	00001	 0		          10	        10	000000000000000001
#   64	000	00	00001	 0		          10	        10	000000000000000001
#   66	001	00	00001	 0		          10	        10	000000000000000001
#   68	000	00	00001	 0		          10	        10	000000000000000001
# TESTBENCH 1: Modificat valoarea de ignore
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  100	000	00	00001	 5		           0	         0	000000000000000001
#  102	001	00	00001	10		           0	        80	000000000000000000
#  104	000	00	00001	10		           0	        80	000000000000000000
#  106	001	00	00001	 5		          50	        50	000000000000000001
#  108	000	00	00001	 5		          50	        50	000000000000000001
#  110	001	00	00001	 8		          50	        50	000000000000000001
#  112	000	00	00001	 8		          50	        50	000000000000000001
#  114	001	00	00001	 5		          25	        25	000000000000000001
#  116	000	00	00001	 5		          25	        25	000000000000000001
#  118	001	00	00001	 2		          10	        10	000000000000000001
#  120	000	00	00001	 2		          10	        10	000000000000000001
#  121	000	01	00001	10		          10	        10	000000000000000001
#  122	001	00	00001	 5		          10	        10	000000000000000001
#  124	000	00	00001	10		          10	        10	000000000000000001
#  126	001	00	00001	13		          65	        65	000000000000000001
#  128	000	00	00001	13		          65	        65	000000000000000001
#  130	001	00	00001	13		         169	       169	000000000000000001
#  132	000	00	00001	13		         169	       169	000000000000000001
#  134	001	00	00001	15		         195	       195	000000000000000001
#  136	000	00	00001	15		         195	       195	000000000000000001
#  138	001	00	00001	15		         225	       225	000000000000000001
#  140	000	00	00001	15		         225	       225	000000000000000001
#  142	001	00	00001	 0		           0	         0	000000000000000001
#  144	000	00	00001	 0		           0	         0	000000000000000001
#  146	001	00	00001	10		           0	         0	000000000000000001
#  148	000	00	00001	10		           0	         0	000000000000000001
#  150	001	00	00001	 3		           0	        30	000000000000000000
#  152	000	00	00000	10		           0	         0	000000000000000001
#  154	001	00	00001	 1		           0	         8	000000000000000000
#  156	000	00	00001	 1		           0	         8	000000000000000000
#  158	001	00	00001	10		          10	        10	000000000000000001
#  160	000	00	00001	10		          10	        10	000000000000000001
#  162	001	00	00001	 8		          10	        10	000000000000000001
#  164	000	00	00001	 8		          10	        10	000000000000000001
#  166	001	00	00001	 8		          10	        10	000000000000000001
#  168	000	00	00001	 8		          10	        10	000000000000000001
# TESTBENCH 2: Modificat numarul de biti
# Time	clk	ld	rst_b	in		expected_out	actual_out	Passed(1)/Failed(0)
#  200	000	00	00001	 5		           0	         0	000000000000000001
#  202	001	00	00001	10		           0	         0	000000000000000001
#  204	000	00	00001	10		           0	         0	000000000000000001
#  206	001	00	00001	 5		          50	        50	000000000000000001
#  208	000	00	00001	 5		          50	        50	000000000000000001
#  210	001	00	00001	 0		          50	        50	000000000000000001
#  212	000	00	00001	 0		          50	        50	000000000000000001
#  214	001	00	00001	 5		          25	        25	000000000000000001
#  216	000	00	00001	 5		          25	        25	000000000000000001
#  218	001	00	00001	 2		          10	        10	000000000000000001
#  220	000	00	00001	 2		          10	        10	000000000000000001
#  221	000	01	00001	10		          10	        10	000000000000000001
#  222	001	00	00001	 5		          10	        10	000000000000000001
#  224	000	00	00001	10		          10	        10	000000000000000001
#  226	001	00	00001	13		          65	        65	000000000000000001
#  228	000	00	00001	13		          65	        65	000000000000000001
#  230	001	00	00001	13		         169	       169	000000000000000001
#  232	000	00	00001	13		         169	       169	000000000000000001
#  234	001	00	00001	63		         819	       819	000000000000000001
#  236	000	00	00001	63		         819	       819	000000000000000001
#  238	001	00	00001	63		        3969	      3969	000000000000000001
#  240	000	00	00001	63		        3969	      3969	000000000000000001
#  242	001	00	00001	 0		           0	      3969	000000000000000000
#  244	000	00	00001	 0		           0	      3969	000000000000000000
#  246	001	00	00001	10		           0	       630	000000000000000000
#  248	000	00	00001	10		           0	       630	000000000000000000
#  250	001	00	00001	 3		           0	        30	000000000000000000
#  252	000	00	00000	10		           0	         0	000000000000000001
#  254	001	00	00001	 1		           0	         0	000000000000000001
#  256	000	00	00001	 1		           0	         0	000000000000000001
#  258	001	00	00001	10		          10	        10	000000000000000001
#  260	000	00	00001	10		          10	        10	000000000000000001
#  262	001	00	00001	 0		          10	        10	000000000000000001
#  264	000	00	00001	 0		          10	        10	000000000000000001
#  266	001	00	00001	 0		          10	        10	000000000000000001
#  268	000	00	00001	 0		          10	        10	000000000000000001
# All Passed / All Total:  51 /  60
# Nota: 2.12
# End time: 13:00:07 on Nov 06,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
